// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using brontona.Data;

namespace brontona.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201206093815_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FCOC.Classes.accounts", b =>
                {
                    b.Property<string>("accountid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.Property<string>("permission");

                    b.HasKey("accountid");

                    b.ToTable("fcocaccounts");
                });

            modelBuilder.Entity("FCOC.Classes.orders", b =>
                {
                    b.Property<string>("orderid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("customerid");

                    b.Property<double>("discount");

                    b.Property<string>("orderdate");

                    b.Property<string>("productid");

                    b.Property<string>("supplierid");

                    b.Property<double>("totalprice");

                    b.HasKey("orderid");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("FCOC.Classes.products", b =>
                {
                    b.Property<string>("productid")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("availibility");

                    b.Property<string>("brand");

                    b.Property<string>("category");

                    b.Property<string>("color");

                    b.Property<string>("description");

                    b.Property<string>("image");

                    b.Property<string>("material");

                    b.Property<string>("name");

                    b.Property<double>("purchaseprice");

                    b.Property<int>("quantityinstock");

                    b.Property<double>("salesprice");

                    b.Property<int>("size");

                    b.HasKey("productid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("FCOC.Classes.reviews", b =>
                {
                    b.Property<string>("reviewid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("customerid");

                    b.Property<string>("productid");

                    b.Property<double>("score");

                    b.Property<string>("text");

                    b.Property<string>("timestamp");

                    b.HasKey("reviewid");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("FCOC.Classes.suppliers", b =>
                {
                    b.Property<string>("supplierid")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("active");

                    b.Property<string>("companyname");

                    b.Property<string>("contactfirstname");

                    b.Property<string>("contactlastname");

                    b.Property<string>("email");

                    b.Property<string>("phonenumber");

                    b.Property<string>("productid");

                    b.HasKey("supplierid");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("FCOC.customers", b =>
                {
                    b.Property<string>("customerid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("country");

                    b.Property<string>("email");

                    b.Property<string>("firstname");

                    b.Property<string>("lastname");

                    b.Property<string>("phonenumber");

                    b.Property<string>("province");

                    b.Property<string>("street");

                    b.Property<string>("streetnumber");

                    b.Property<string>("zipcode");

                    b.HasKey("customerid");

                    b.ToTable("customers");
                });
#pragma warning restore 612, 618
        }
    }
}
